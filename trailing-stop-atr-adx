//@version=2
// Constructs the trailing ATR stop above or below the price, and switches
// directions when the source price breaks the ATR stop. Uses the Average
// Directional Index (ADX) to switch between ATR multipliers. The higher
// multiplier is used when the ADX is rising, and the lower ATR multiplier
// is used with the ADX is falling. This ADX criteria further widens the gap 
// between the source price and the trailing ATR stop when the price is trending,
// and lessens the gap between the ATR and the price when then price is not
// trending.
//
// The ATR-ADX stop is effectively a double adapative stop that trails the price,
// by both adapting to the true range of the price, and the average directional
// change. When the stop is below the price (long trade) the value never decreases
// until the price intersects the stop, and it reverses to being above the price
// (short trade). When the stop is above the price it will never increase until
// it is intersected by the price. As the true range and ADX change, the stop
// will move more quickly or more slowly.

// http://www.fxtsp.com/1287-doubly-adaptive-profit-average-true-range-objectives/

study(title = "Adaptive ATR-ADX Trend", shorttitle = "Adaptive ATR", overlay = true)

//Mode
src = input(title = "Source", type = source, defval = close)
atrLen = input(title = "ATR", type = integer, defval = 21, minval = 1, maxval = 100)
m1 = input(title = "ATR Multiplier - ADX Rising", type = float, defval = 4.0, minval = 1, step = 0.1, maxval = 100)
m2 = input(title = "ATR Multiplier - ADX Falling", type = float, defval = 1.5, minval = 1, step = 0.1, maxval = 100)

adxLen = input(title = "ADX", type = integer, defval = 14, minval = 1, maxval = 100)
    
// DI-Pos, DI-Neg, ADX

hR = high - nz(high[1])
lR = nz(low[1]) - low

dmPos = hR > lR ? abs(hR) : 0
dmNeg = lR > hR ? abs(lR) : 0

sTR = nz(sTR[1]) - nz(sTR[1]) / adxLen + tr
sDMPos = nz(sDMPos[1]) - nz(sDMPos[1]) / adxLen + dmPos
sDMNeg = nz(sDMNeg[1]) - nz(sDMNeg[1]) / adxLen + dmNeg

DIP = sDMPos / sTR * 100
DIN = sDMNeg / sTR * 100
DX = abs(DIP - DIN) / (DIP + DIN) * 100
adx = sma(DX, adxLen)

// Trailing ATR

m = rising(adx, 1) ? m1 : falling(adx, 1) ? m2 : nz(m[1])
up = hl2 - m * atr(atrLen)
dn = hl2 + m * atr(atrLen)

TUp = src[1] > TUp[1] ? max(up, TUp[1]) : up
TDown = src[1] < TDown[1] ? min(dn, TDown[1]) : dn

trend = src > TDown[1] ? 1 : src < TUp[1]? -1 : nz(trend[1], 1)
stop = trend == 1 ? TUp : TDown
trendChange = change(trend)

// Plot

lineColor = not(trendChange) ? trend > 0 ? #00FF00DD : #FF0000DD : #00000000
shapeColor = trendChange ? trendChange > 0 ? #00FF00F8 : #FF0000F8 : #00000000

plot(stop, color = lineColor, style = line, linewidth = 1, title = "ATR Trend")
plotshape(trendChange ? stop : na, style = shape.circle, size = size.tiny, location = location.absolute, color = shapeColor, title = "Change")

// end
